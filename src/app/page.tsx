'use client'

import { useState } from 'react'

export default function Home() {
  const [prompt, setPrompt] = useState('')
  const [imageUrl, setImageUrl] = useState<string | null>(null)
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError(null)
    setImageUrl(null)

    try {
      const res = await fetch('/api/generate-image', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      })

      const data = await res.json()

      if (res.ok) {
        const image = data.image
        if (image) {
          setImageUrl(image) // đã kèm sẵn prefix data:image/png;base64,
        } else {
          setError('Không nhận được ảnh từ API')
        }
      } else {
        setError(data.message || 'Lỗi tạo ảnh')
      }
    } catch (err: any) {
      setError(err.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <main className="min-h-screen bg-neutral-950 text-white p-6">
      <h1 className="text-2xl font-bold mb-4">
        Google Imagen 3 (Vertex AI) - Demo
      </h1>

      <form onSubmit={handleSubmit} className="space-y-3">
        <textarea
          className="w-full p-3 rounded bg-neutral-900 border border-neutral-700"
          rows={3}
          placeholder="Nhập prompt để tạo ảnh..."
          value={prompt}
          onChange={(e) => setPrompt(e.target.value)}
        />
        <button
          type="submit"
          disabled={loading}
          className="px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 disabled:opacity-50"
        >
          {loading ? 'Đang tạo ảnh...' : 'Tạo ảnh'}
        </button>
      </form>

      {error && (
        <p className="mt-4 text-red-400">⚠️ {error}</p>
      )}

      {imageUrl && (
        <div className="mt-6">
          <h2 className="text-lg font-semibold mb-2">Kết quả:</h2>
          <img
            src={imageUrl}
            alt="Generated by Imagen"
            className="rounded shadow-lg max-w-full"
          />
        </div>
      )}
    </main>
  )
}
